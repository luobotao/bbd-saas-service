<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean id="csrfFilter" class="org.springframework.security.web.csrf.CsrfFilter">
		<constructor-arg>
			<bean class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository"/>
		</constructor-arg>
		<property name="requireCsrfProtectionMatcher" ref="csrfSecurityRequestMatcher">
		
		</property>
		
	</bean>
	<!--
		Provides automatic CSRF token inclusion when using Spring MVC Form tags or Thymeleaf. See
		http://localhost:8080/#forms and form.jsp for examples
	-->
	<bean id="requestDataValueProcessor" class="org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor"/>

	<bean id="csrfSecurityRequestMatcher" class="org.springframework.csrf.CsrfSecurityRequestMatcher">
		<property name="execludeUrls">
			<list>
				<value>/userManage/changestatusOuter</value>
				<value>/bbd</value>
				<value>/login</value>
				<value>/subscribe/subscribeback</value>
				<value>/handleAbnormal/batchToOtherCompany</value>
				<value>/handleAbnormal</value>
				<value>register</value>
				<value>sendVerifyCode</value>
				<value>main</value>
			</list>
		</property>
	</bean>

	<!-- 配置线程池 -->
	<bean id ="taskExecutor"  class ="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >
		<!-- 线程池维护线程的最少数量 -->
		<property name ="corePoolSize" value ="5" />
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name ="keepAliveSeconds" value ="30000" />
		<!-- 线程池维护线程的最大数量 -->
		<property name ="maxPoolSize" value ="1000" />
		<!-- 线程池所使用的缓冲队列 -->
		<property name ="queueCapacity" value ="200" />
		<!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->
		<property name="rejectedExecutionHandler">
			<!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
			<!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
			<!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
			<!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>

	<import resource="bbd-saas-consumer.xml" />
</beans>
